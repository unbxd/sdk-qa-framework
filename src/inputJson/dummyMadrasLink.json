{
	"loader": {
		"el": "document.getElementById(\"loaderEl\")",
		"template": "function () { return `<div class=\"UNX-loader\">Loading search results....</div>` }"
	},
	"siteKey": "ss-unbxd-betta-pre-prod35741675334517",
	"apiKey": "b1b5f033416fbf18f301aee3dab41934",
	"searchBoxEl": "document.getElementById(\"unbxdInput\")",
	"searchButtonEl": "document.getElementById(\"searchBtn\")",
	"unbxdAnalytics": false,
	"products": {
		"productType": "search",
		"el": "document.getElementById(\"searchResultsWrapper\")",
		"gridCount": 1,
		"productItemClass": "product-item",
		"defaultImage": "https://libraries.unbxdapi.com/sdk-assets/defaultImage.svg",
		"tagName": "DIV",
		"template": "function template(\n\t\t\tproduct,\n\t\t\tidx,\n\t\t\tswatchUI,\n\t\t\tproductViewType,\n\t\t\tproducts\n\t\t) {\n\t\t\tconst { productItemClass } = products;\n\t\t\tvar title = product.title;\n\t\t\tprice = product.price;\n\t\t\tbrand = product.brand;\n\t\t\tunxBadge = product.unxBadge;\n\t\t\timageUrl = product.imageUrl;\n\t\t\tuniqueId = product.uniqueId;\n\t\t\tvariant_SKU = product.variant_SKU;\n\t\t\tunxProductUrl = product.productUrl;\n\t\t\tvar unxBadges = \"\";\n\t\t\tif (unxBadge === \"New\" || unxBadge === \"Outlet\" || unxBadge === \"Sale\") {\n\t\t\t\tunxBadges =\n\t\t\t\t\t'<span class=\"UNX-badges grid-product__tag grid-product__tag--custom\">' +\n\t\t\t\t\tunxBadge +\n\t\t\t\t\t\"</span>\";\n\t\t\t}\n\t\t\treturn [\n\t\t\t\t'<div class=\"UNX-product-item grid__item grid-product\" id=\"' +\n\t\t\t\t\tuniqueId +\n\t\t\t\t\t'\" data-id=\"' +\n\t\t\t\t\tuniqueId +\n\t\t\t\t\t'\" unbxdattr=\"product\" unbxdparam_sku=\"' +\n\t\t\t\t\tuniqueId +\n\t\t\t\t\t'\" unbxdparam_prank=\"' +\n\t\t\t\t\tidx +\n\t\t\t\t\t'\" unbxdparam_requestId=\"' +\n\t\t\t\t\twindow.unbxdSearch.state.requestId +\n\t\t\t\t\t'\" unbxdparam_variant =\"' +\n\t\t\t\t\tvariant_SKU +\n\t\t\t\t\t'\">',\n\t\t\t\t'<div class=\"UNX-product-content grid-product__content\">',\n\t\t\t\t'<div class=\"UNX-badge\">' + unxBadges + \"</div>\",\n\t\t\t\t'<a href=\"' +\n\t\t\t\t\tunxProductUrl +\n\t\t\t\t\t'\" class=\"UNX-product-link grid-product__link\">',\n\t\t\t\t'<div class=\"UNX-product-image-mask grid-product__image-mask\">',\n\t\t\t\t'<div class=\"UNX-images-block grid__image-ratio grid__image-ratio--square\" >',\n\t\t\t\t'<img class=\"lazyautosizes lazyloaded\" src=\"' +\n\t\t\t\t\timageUrl +\n\t\t\t\t\t'\" data-widths=\"[360, 540, 720, 900, 1080]\" data-aspectratio=\"1.0\" data-sizes=\"auto\" alt=\"\">',\n\t\t\t\t\"</div>\",\n\t\t\t\t'<div class=\"UNX-second-img grid-product__secondary-image small--hide\">',\n\t\t\t\t'<img class=\"lazyautosizes lazyloaded\" data-widths=\"[360, 540, 720, 1000]\" data-aspectratio=\"1.0\" data-sizes=\"auto\" alt=\"\" src=\"' +\n\t\t\t\t\timageUrl +\n\t\t\t\t\t'\">',\n\t\t\t\t\"</div>\",\n\t\t\t\t\"</div>\",\n\t\t\t\t'<div class=\"UNX-product-meta grid-product__meta\">',\n\t\t\t\t'<div class=\"UNX-product-title grid-product__title grid-product__title--body\">' +\n\t\t\t\t\ttitle +\n\t\t\t\t\t\"</div>\",\n\t\t\t\t'<div class=\"UNX-product-brand grid-product__vendor\">' +\n\t\t\t\t\tbrand +\n\t\t\t\t\t\"</div>\",\n\t\t\t\t'<div class=\"UNX-price-row grid-product__price\">$' + price + \"</div>\",\n\t\t\t\t\"</div>\",\n\t\t\t\t\"</a>\",\n\t\t\t\t\"</div>\",\n\t\t\t\t\"</div>\",\n\t\t\t].join(\"\");\n\t\t}",
		"productAttributes": "[\n\t\t\t\"uniqueId\",\n\t\t\t\"variant_SKU\",\n\t\t\t\"imageUrl\",\n\t\t\t\"brand\",\n\t\t\t\"variant_SKU\",\n\t\t\t\"title\",\n\t\t\t\"price\",\n\t\t\t\"productUrl\",\n\t\t\t\"category2\",\n\t\t]",
		"attributesMap": "{\n\t\"brand\": \"brand\",\n\t\"unxPrice\": \"price\",\n\t\"unxTitle\": \"title\",\n    \"unxBadge\": \"category2\",\n\t\"unxProductUrl\": \"productUrl\",\n\t\"unxCollections\": [ \"categoryPath1\", \"categoryPath2\", \"categoryPath1_fq\", \"categoryPath2_fq\", \"categoryPath\", \"category2\"]\n}",
		"onProductClick": "function (product, e) {\n}",
		"htmlAttributes": "{\n    \"class\": \"UNX-search-results-block UNX-result-wrapper\"\n}"
	},
	"facet": {
		"facetsEl": "document.getElementById(\"facetsWrapper\")",
		"facetMultiSelect": "true",
		"facetClass": "UNX-facets-block",
		"facetAction": "click",
		"selectedFacetClass": "UNX-selected-facet-btn",
		"selectedFacetsEl": "document.getElementById(\"selectedFacetWrapper\")",
		"clearAllText": "Clear All",
		"facetMultilevel": "true",
		"facetMultilevelName": "Category",
		"multiLevelFacetSelectorClass": "UNX-multilevel-facet",
		"facetDepth": 4,
		"clearFacetsSelectorClass": "UNX-clear-facet",
		"removeFacetsSelectorClass": "UNX-remove-facet",
		"applyMultipleFilters": "false",
		"applyButtonText": "Apply",
		"clearButtonText": "clear",
		"isCollapsible": "true",
		"defaultOpen": "ALL",
		"isSearchable": "true",
		"searchPlaceHolder": "Search Filter",
		"enableViewMore": "true",
		"viewMoreLimit": 6,
		"tagName": "DIV",
		"facetTemplate": "function facetTemplate(\n\t\t\tfacetObj,\n\t\t\tchildren,\n\t\t\tisExpanded,\n\t\t\tfacetSearchTxt,\n\t\t\tfacet\n\t\t) {\n\t\t\tvar displayName = facetObj.displayName,\n\t\t\t\tfacetName = facetObj.facetName,\n\t\t\t\tmultiLevelField = facetObj.multiLevelField,\n\t\t\t\tfacetType = facetObj.facetType,\n\t\t\t\tvalues = facetObj.values;\n\t\t\tvar facetClass = facet.facetClass,\n\t\t\t\tapplyMultipleFilters = facet.applyMultipleFilters,\n\t\t\t\tisCollapsible = facet.isCollapsible,\n\t\t\t\tisSearchable = facet.isSearchable,\n\t\t\t\tsearchPlaceHolder = facet.searchPlaceHolder,\n\t\t\t\ttextFacetWrapper = facet.textFacetWrapper,\n\t\t\t\tenableViewMore = facet.enableViewMore,\n\t\t\t\tviewMoreText = facet.viewMoreText,\n\t\t\t\tviewMoreLimit = facet.viewMoreLimit,\n\t\t\t\tapplyButtonText = facet.applyButtonText,\n\t\t\t\tclearButtonText = facet.clearButtonText;\n\t\t\tvar _this$options = this.options,\n\t\t\t\tactionBtnClass = _this$options.actionBtnClass,\n\t\t\t\tactionChangeClass = _this$options.actionChangeClass;\n\t\t\tvar _this$cssList = this.cssList,\n\t\t\t\topenBtn = _this$cssList.openBtn,\n\t\t\t\tcloseBtn = _this$cssList.closeBtn;\n\t\t\tvar viewMoreUi = \"\";\n\t\t\tvar viewMoreCss = \"\";\n\t\t\tvar selected = this.getSelectedFacets()[facetName];\n\t\t\tvar isFtr = selected && selected.length > 0 ? true : false;\n\t\t\tif (\n\t\t\t\tenableViewMore &&\n\t\t\t\tfacetType === \"text\" &&\n\t\t\t\tvalues.length > viewMoreLimit\n\t\t\t) {\n\t\t\t\tviewMoreCss = \"UNX-view-more\";\n\t\t\t\tviewMoreUi = '<div class=\"UNX-view-more-row \"><button class=\"'\n\t\t\t\t\t.concat(actionBtnClass, '\" data-facet-name=\"')\n\t\t\t\t\t.concat(facetName, '\" data-action=\"viewMore\" data-id=\"')\n\t\t\t\t\t.concat(viewMoreText[0], '\">')\n\t\t\t\t\t.concat(viewMoreText[0], \"</button></div>\");\n\t\t\t}\n\t\t\tvar clearUI = \"\";\n\t\t\tvar applyBtn = \"\";\n\t\t\tif (isFtr) {\n\t\t\t\tclearUI = '<button class=\"UNX-facet-clear '\n\t\t\t\t\t.concat(\n\t\t\t\t\t\tfacetClass,\n\t\t\t\t\t\t' \"data-facet-action=\"deleteFacet\" data-facet-name=\"'\n\t\t\t\t\t)\n\t\t\t\t\t.concat(facetName, '\">')\n\t\t\t\t\t.concat(clearButtonText, \"</button>\");\n\t\t\t}\n\t\t\tif (applyMultipleFilters && isFtr) {\n\t\t\t\tapplyBtn = '<button class=\"UNX-facet-primary '\n\t\t\t\t\t.concat(facetClass, ' \"data-facet-action=\"applyFacets\" >')\n\t\t\t\t\t.concat(applyButtonText, \"</button>\");\n\t\t\t}\n\t\t\tvar collapsibleUI = \"\";\n\t\t\tvar searchInput = \"\";\n\t\t\tif (isCollapsible) {\n\t\t\t\tif (isExpanded) {\n\t\t\t\t\tcollapsibleUI = '<div class=\"UNX-facet-header '\n\t\t\t\t\t\t.concat(actionBtnClass, ' UNX-facet-open\"  data-facet-name=\"')\n\t\t\t\t\t\t.concat(facetName, '\" data-facet-action=\"facetClose\"> <h3>')\n\t\t\t\t\t\t.concat(displayName, \"</h3></div>\");\n\t\t\t\t} else {\n\t\t\t\t\tcollapsibleUI = '<div class=\"UNX-facet-header '\n\t\t\t\t\t\t.concat(actionBtnClass, ' UNX-facet-close\"  data-facet-name=\"')\n\t\t\t\t\t\t.concat(facetName, '\" data-facet-action=\"facetOpen\"> <h3>')\n\t\t\t\t\t\t.concat(displayName, \"</h3></div>\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isSearchable && facetSearchTxt !== null) {\n\t\t\t\tsearchInput = '<div class=\"UNX-searchable-facets\"><input data-test-id=\"'\n\t\t\t\t\t.concat(this.testIds.UNX_searchFacets, '\" class=\"UNX-facet-search ')\n\t\t\t\t\t.concat(actionChangeClass, '\" value=\"')\n\t\t\t\t\t.concat(facetSearchTxt, '\"  data-facet-name=\"')\n\t\t\t\t\t.concat(\n\t\t\t\t\t\tfacetName,\n\t\t\t\t\t\t'\" data-facet-action=\"searchFacets\" type=\"text\" placeholder=\"'\n\t\t\t\t\t)\n\t\t\t\t\t.concat(searchPlaceHolder, '\"/></div>');\n\t\t\t}\n\t\t\treturn [\n\t\t\t\t'<div class=\"UNX-text-facet-wrap\" style=\"border-top: unset !important\"; \"border-top-color: unset !important\" >',\n\t\t\t\tcollapsibleUI,\n\t\t\t\t'<div class=\"UNX-facets-all\">',\n\t\t\t\t'<div class=\"UNX-facets '\n\t\t\t\t\t.concat(textFacetWrapper, \" \")\n\t\t\t\t\t.concat(viewMoreCss, '\">')\n\t\t\t\t\t.concat(children, \"</div>\"),\n\t\t\t\t\"</div>\",\n\t\t\t\t\"</div>\",\n\t\t\t].join(\"\");\n\t\t}",
		"facetItemTemplate": "function facetItemTemplate(\n\t\t\tfacet,\n\t\t\tvalue,\n\t\t\tfacetSearchTxt\n\t\t) {\n\t\t\tvar facetName = facet.facetName,\n\t\t\t\tisSelected = facet.isSelected;\n\t\t\tvar name = value.name,\n\t\t\t\tcount = value.count,\n\t\t\t\tdataId = value.dataId;\n\t\t\tvar _this$options$facet = this.options.facet,\n\t\t\t\tfacetClass = _this$options$facet.facetClass,\n\t\t\t\tselectedFacetClass = _this$options$facet.selectedFacetClass;\n\t\t\tvar UNX_uFilter = this.testIds.UNX_uFilter;\n\t\t\tif (facetSearchTxt && facetSearchTxt.length > 0) {\n\t\t\t\tif (name.toUpperCase().indexOf(facetSearchTxt.toUpperCase()) < 0) {\n\t\t\t\t\tfacetClass += \" UNX-search-hidden\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet action = \"changeFacet\";\n\t\t\tif (isSelected) {\n\t\t\t\tfacetClass += ` ${selectedFacetClass}`;\n\t\t\t\taction = \"deleteFacetValue\";\n\t\t\t}\n\t\t\tif (facetName === \"colorTags_uFilter\") {\n\t\t\t\tvar cName = name.toLowerCase();\n\t\t\t\tvar fName = cName.replace(\" \", \"-\");\n\t\t\t\tvar facetNames =\n\t\t\t\t\t\"https://cdn.shopify.com/s/files/1/0727/7773/t/57/assets/\".concat(\n\t\t\t\t\t\tfName + \"_50x.png\"\n\t\t\t\t\t);\n\t\t\t\treturn [\n\t\t\t\t\t`<button data-test-id=\"${UNX_uFilter}\" data-facet-name=\"${facetName}\" data-facet-action=\"${action}\" class=\"UNX-change-facet UNX-color-facet ${facetClass}\" data-id=\"${dataId}\">`,\n\t\t\t\t\t`<span class=\"UNX-color-swatch\">${name}</span><span class=\"UNX-facet-text color-swatch color-swatch--filter color-swatch\" style=\"background-image: url(` +\n\t\t\t\t\t\t`${facetNames}` +\n\t\t\t\t\t\t`); background-color: ${fName};\"></span></button>`,\n\t\t\t\t].join(\"\");\n\t\t\t} else if (facetName === \"brand_uFilter\") {\n\t\t\t\treturn [\n\t\t\t\t\t`<div title=\"${\n\t\t\t\t\t\tdataId ? dataId : \"None\"\n\t\t\t\t\t}\" data-test-id=\"${UNX_uFilter}\" data-facet-name=\"${facetName}\" data-facet-action=\"${action}\" class=\"UNX-change-facet ${facetClass} \" data-id=\"${dataId}\">`,\n\t\t\t\t\t`<span class=\"UNX-brand ${facetClass}\" type=\"checkbox\"></span><div class=\"UNX-facet-text\">${name}</div><span class=\"UNX-facet-count\">(${count})</span></div>`,\n\t\t\t\t].join(\"\");\n\t\t\t} else {\n\t\t\t\treturn [\n\t\t\t\t\t`<button title=\"${\n\t\t\t\t\t\tdataId ? dataId : \"None\"\n\t\t\t\t\t}\" data-test-id=\"${UNX_uFilter}\" data-facet-name=\"${facetName}\" data-facet-action=\"${action}\" class=\"UNX-change-facet ${facetClass} \" data-id=\"${dataId}\">`,\n\t\t\t\t\t`<span class=\"UNX-facet-text\">${name}</span></button>`,\n\t\t\t\t].join(\"\");\n\t\t\t}\n\t\t}",
		"selectedFacetTemplate": "function selectedFacetTemplate(\n\t\t\tselections,\n\t\t\tfacet,\n\t\t\tselectedFacetsConfig\n\t\t) {\n\t\t\tconst { clearAllText, clearFacetsSelectorClass } = facet;\n\t\t\tconst selectedFClass = this.selectedFacetClass\n\t\t\t\t? this.selectedFacetClass\n\t\t\t\t: selectedFacetsConfig.selectedFacetClass;\n\t\t\tif (selections.length > 0) {\n\t\t\t\tdocument.querySelector(\"#UNX-filter-components\").style.display = \"flex\";\n\t\t\t\treturn [\n\t\t\t\t\t'<div class=\"UNX-facets-selections\">',\n\t\t\t\t\t'<div class=\"UNX-selected-facets-inner\">'.concat(\n\t\t\t\t\t\tselections,\n\t\t\t\t\t\t\"</div>\"\n\t\t\t\t\t),\n\t\t\t\t\t\"</div>\",\n\t\t\t\t].join(\"\");\n\t\t\t} else {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t}",
		"selectedFacetItemTemplate": "function selectedFacetItemTemplate(\n\t\t\tselectedFacet,\n\t\t\tselectedFacetItem\n\t\t) {\n\t\t\tvar facetName = selectedFacet.facetName,\n\t\t\t\tfacetType = selectedFacet.facetType;\n\t\t\tvar name = selectedFacetItem.name,\n\t\t\t\tcount = selectedFacetItem.count,\n\t\t\t\tdataId = selectedFacetItem.dataId;\n\t\t\tvar _this$options$facet = this.options.facet,\n\t\t\t\tfacetClass = _this$options$facet.facetClass,\n\t\t\t\tselectedFacetClass = _this$options$facet.selectedFacetClass,\n\t\t\t\tremoveFacetsSelectorClass =\n\t\t\t\t\t_this$options$facet.removeFacetsSelectorClass;\n\t\t\tvar UNX_uFilter = this.testIds.UNX_uFilter;\n\t\t\tvar action = \"deleteSelectedFacetValue\";\n\t\t\tif (facetType === \"range\") {\n\t\t\t\taction = \"deleteSelectedRange\";\n\t\t\t}\n\t\t\tvar css = \" \".concat(facetClass, \" \").concat(selectedFacetClass, \" \");\n\t\t\tif (facetName === \"colorTags_uFilter\") {\n\t\t\t\treturn [\n\t\t\t\t\t'<li class=\"UNX-selected-facets-wrap\">',\n\t\t\t\t\t'<a data-test-id=\"'\n\t\t\t\t\t\t.concat(UNX_uFilter, '\" class=\"UNX-change-facet')\n\t\t\t\t\t\t.concat(css, '\" data-facet-name=\"')\n\t\t\t\t\t\t.concat(facetName, '\" data-facet-action=\"')\n\t\t\t\t\t\t.concat(action, '\" data-id=\"')\n\t\t\t\t\t\t.concat(dataId, '\">'),\n\t\t\t\t\t'<span class=\"UNX-facet-text \">'.concat(name, \"</span></a>\"),\n\t\t\t\t\t'<a class=\"UNX-delete-facet '\n\t\t\t\t\t\t.concat(removeFacetsSelectorClass, \"\")\n\t\t\t\t\t\t.concat(css, '\" data-id=\"')\n\t\t\t\t\t\t.concat(dataId, '\" data-facet-action=\"')\n\t\t\t\t\t\t.concat(action, '\" data-facet-name=\"')\n\t\t\t\t\t\t.concat(facetName, '\">x</a>'),\n\t\t\t\t\t\"</li>\",\n\t\t\t\t].join(\"\");\n\t\t\t}\n\t\t\tif (facetName === \"price\") {\n\t\t\t\tvar currency =\n\t\t\t\t\tname.trim().length > 0\n\t\t\t\t\t\t? \"$\" + name.split(\"TO \")[0] + \"TO \" + \"$\" + name.split(\"TO \")[1]\n\t\t\t\t\t\t: \"&nbsp;&nbsp;&nbsp;\";\n\t\t\t\treturn [\n\t\t\t\t\t'<li class=\"UNX-selected-facets-wrap\">',\n\t\t\t\t\t'<a data-test-id=\"'\n\t\t\t\t\t\t.concat(UNX_uFilter, '\" class=\"UNX-change-facet')\n\t\t\t\t\t\t.concat(css, '\" data-facet-name=\"')\n\t\t\t\t\t\t.concat(facetName, '\" data-facet-action=\"')\n\t\t\t\t\t\t.concat(action, '\" data-id=\"')\n\t\t\t\t\t\t.concat(dataId, '\">'),\n\t\t\t\t\t'<span class=\"UNX-facet-text \">'.concat(currency, \"</span></a>\"),\n\t\t\t\t\t'<a class=\"UNX-delete-facet '\n\t\t\t\t\t\t.concat(removeFacetsSelectorClass, \"\")\n\t\t\t\t\t\t.concat(css, '\" data-id=\"')\n\t\t\t\t\t\t.concat(dataId, '\" data-facet-action=\"')\n\t\t\t\t\t\t.concat(action, '\" data-facet-name=\"')\n\t\t\t\t\t\t.concat(facetName, '\">x</a>'),\n\t\t\t\t\t\"</li>\",\n\t\t\t\t].join(\"\");\n\t\t\t} else {\n\t\t\t\treturn [\n\t\t\t\t\t'<li class=\"UNX-selected-facets-wrap\">',\n\t\t\t\t\t'<a data-test-id=\"'\n\t\t\t\t\t\t.concat(UNX_uFilter, '\" class=\"UNX-change-facet')\n\t\t\t\t\t\t.concat(css, '\" data-facet-name=\"')\n\t\t\t\t\t\t.concat(facetName, '\" data-facet-action=\"')\n\t\t\t\t\t\t.concat(action, '\" data-id=\"')\n\t\t\t\t\t\t.concat(dataId, '\">'),\n\t\t\t\t\t'<span class=\"UNX-facet-text \">'.concat(name, \"</span></a>\"),\n\t\t\t\t\t'<a class=\"UNX-delete-facet '\n\t\t\t\t\t\t.concat(removeFacetsSelectorClass, \"\")\n\t\t\t\t\t\t.concat(css, '\" data-id=\"')\n\t\t\t\t\t\t.concat(dataId, '\" data-facet-action=\"')\n\t\t\t\t\t\t.concat(action, '\" data-facet-name=\"')\n\t\t\t\t\t\t.concat(facetName, '\">x</a>'),\n\t\t\t\t\t\"</li>\",\n\t\t\t\t].join(\"\");\n\t\t\t}\n\t\t}",
		"selectedFacetConfig": "{\n  \"facet\": \"some facet\"\n}",
		"rangeTemplate": "function (range, selectedRange, facet) {\n\t\t\tconst { facetName, start, end } = range;\n\t\t\tlet min = start;\n\t\t\tlet max = end;\n\t\t\tconsole.log(\"Range:\", range);\n\t\t\tconsole.log(\"SelectedRange:\", selectedRange);\n\t\t\tif (selectedRange.length > 0) {\n\t\t\t\tconst sel = selectedRange[0].replace(/[^\\w\\s]/gi, \"\").split(\" TO \");\n\t\t\t\tmin = sel[0];\n\t\t\t\tmax = sel[1];\n\t\t\t}\n\t\t\tconst rangId = `${facetName}_slider`;\n\t\t\treturn [\n\t\t\t\t`<div id=\"${facetName}\"  data-id=\"${facetName}\" class=\" UNX-range-slider-wrap\">`,\n\t\t\t\t`<div class=\"UNX-value-container UNX-range-value-block\"></div>`,\n\t\t\t\t`<div id=\"${rangId}\" data-x=\"${min}\" data-y=\"${max}\" class=\"UNX-range-slider-wrapper\">`,\n\t\t\t\t`</div>`,\n\t\t\t\t`</div>`,\n\t\t\t].join(\"\");\n\t\t}",
		"rangeWidgetConfig": "{\n\t\t\t\"minLabel\": \"0.00\",\n\t\t\t\"maxLabel\": \"2000.00\",\n\t\t\t\"prefix\": \"$\"\n}",
		"multiLevelFacetTemplate": "function multiLevelFacetTemplate(\n\t\t\tfacet,\n\t\t\tselectedCategories,\n\t\t\tfacetSearchTxt,\n\t\t\tfacetConfig\n\t\t) {\n\t\t\tvar facetValues = facet.values;\n\t\t\tvar ui = \"\";\n\t\t\tvar multiLevelFacetSelectorClass =\n\t\t\t\t\tfacetConfig.multiLevelFacetSelectorClass,\n\t\t\t\tfacetClass = facetConfig.facetClass;\n\t\t\tvar UNX_facetLevel = this.testIds.UNX_facetLevel;\n\t\t\tif (selectedCategories) {\n\t\t\t\tfor (var i = 0; i < facet.values.length; i++) {\n\t\t\t\t\tfor (var j = 0; j < selectedCategories.length; j++) {\n\t\t\t\t\t\tif (facet.values[i].name == selectedCategories[j].value) {\n\t\t\t\t\t\t\tfacetValues.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tselectedCategories.forEach(function (item) {\n\t\t\t\t\tvar level = item.level,\n\t\t\t\t\t\tfilterField = item.filterField,\n\t\t\t\t\t\tvalue = item.value;\n\t\t\t\t\tvar lTid = 'data-test-id=\"'.concat(UNX_facetLevel).concat(level, '\"');\n\t\t\t\t\tvar levelCss = \"\"\n\t\t\t\t\t\t.concat(multiLevelFacetSelectorClass, \"  UNX-category-level-\")\n\t\t\t\t\t\t.concat(level);\n\t\t\t\t\tui += [\n\t\t\t\t\t\t\"<li \"\n\t\t\t\t\t\t\t.concat(lTid, ' data-parent=\"')\n\t\t\t\t\t\t\t.concat(filterField, '\" data-level=\"')\n\t\t\t\t\t\t\t.concat(level, '\" data-name=\"')\n\t\t\t\t\t\t\t.concat(value, '\"'),\n\t\t\t\t\t\t'class=\" '\n\t\t\t\t\t\t\t.concat(levelCss, \" UNX-selected-crumb \")\n\t\t\t\t\t\t\t.concat(facetClass, '\" data-action = \"clearCategoryFilter\">'),\n\t\t\t\t\t\t'<span class=\"UNX-category-icon\"></span><label class=\"UNX-facet-text\">'.concat(\n\t\t\t\t\t\t\tdecodeURIComponent(value),\n\t\t\t\t\t\t\t\"</label>\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"</li>\",\n\t\t\t\t\t].join(\"\");\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar level = facet.level,\n\t\t\t\tdisplayName = facet.displayName,\n\t\t\t\tvalues = facetValues,\n\t\t\t\tfilterField = facet.filterField;\n\t\t\tvar multiLevelField = facet.multiLevelField;\n\t\t\tif (!multiLevelField) {\n\t\t\t\tmultiLevelField = filterField;\n\t\t\t}\n\t\t\tvar lTid = 'data-test-id=\"'.concat(UNX_facetLevel).concat(level, '\"');\n\t\t\tvar levelCss = \"UNX-category-level-\".concat(level);\n\t\t\tvar valueUI = values.map(function (item) {\n\t\t\t\tvar name = item.name,\n\t\t\t\t\tcount = item.count;\n\t\t\t\tif (facetSearchTxt && facetSearchTxt.length > 0) {\n\t\t\t\t\tif (name.toUpperCase().indexOf(facetSearchTxt.toUpperCase()) < 0) {\n\t\t\t\t\t\tfacetClass += \" UNX-search-hidden\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\t\"<li \"\n\t\t\t\t\t\t.concat(lTid, ' data-parent=\"')\n\t\t\t\t\t\t.concat(multiLevelField, '\" data-level=\"')\n\t\t\t\t\t\t.concat(level, '\"'),\n\t\t\t\t\t'class=\"'\n\t\t\t\t\t\t.concat(multiLevelFacetSelectorClass, \" \")\n\t\t\t\t\t\t.concat(levelCss, \" UNX-unselected-crumb \")\n\t\t\t\t\t\t.concat(facetClass, '\" data-name=\"')\n\t\t\t\t\t\t.concat(name, '\" data-action = \"setCategoryFilter\">'),\n\t\t\t\t\t'<label class=\"UNX-facet-text\">'.concat(name, \"</label></li>\"),\n\t\t\t\t].join(\"\");\n\t\t\t});\n\t\t\tui += '<div class=\"UNX-category-values\">'.concat(\n\t\t\t\tvalueUI.join(\"\"),\n\t\t\t\t\"</div>\"\n\t\t\t);\n\t\t\tif (ui !== \"\") {\n\t\t\t\treturn [\n\t\t\t\t\t'<div class=\"UNX-multi-facet-wrap\">',\n\t\t\t\t\t\"\".concat(ui, \"</div>\"),\n\t\t\t\t].join(\"\");\n\t\t\t} else {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t}",
		"onFacetLoad": "function (facets) {\n\t\t\tconsole.log(\"price-slide\");\n\t\t\tdocument.querySelector(\".site-header__search-input\").value = \"\";\n\t\t\tlet _this = this;\n\t\t\tlet self = this;\n\t\t\tlet facet = this.options.facet;\n\t\t\tlet rangeWidgetConfig = facet.rangeWidgetConfig;\n\t\t\tfacets.forEach(function (facetItem) {\n\t\t\t\tlet facetType = facetItem.facetType,\n\t\t\t\t\tfacetName = facetItem.facetName,\n\t\t\t\t\tgap = facetItem.gap;\n\t\t\t\tlet prefix = rangeWidgetConfig.prefix;\n\t\t\t\tif (facetType === \"range\") {\n\t\t\t\t\tlet rangeId = \"\".concat(facetName, \"_slider\");\n\t\t\t\t\tlet sliderElem = document.getElementById(rangeId);\n\t\t\t\t\tlet end = facetItem.end,\n\t\t\t\t\t\t_gap = facetItem.gap,\n\t\t\t\t\t\tmax = facetItem.max,\n\t\t\t\t\t\tmin = 0,\n\t\t\t\t\t\tstart = facetItem.start;\n\t\t\t\t\tlet selectedValues = sliderElem.dataset;\n\n\t\t\t\t\t// localStorage.setItem(\"rangeMaxVal\", max)\n\n\t\t\t\t\tif (!localStorage.getItem(\"prevQuery\")) {\n\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t\"prevQuery\",\n\t\t\t\t\t\t\twindow.unbxdSearch.getSearchQuery()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmin = 0;\n\t\t\t\t\t\tmax = Math.ceil(max) || 0;\n\t\t\t\t\t\tlocalStorage.setItem(\"rangeMaxVal\", max);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlocalStorage.getItem(\"prevQuery\") ===\n\t\t\t\t\t\t\twindow.unbxdSearch.getSearchQuery()\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmin = 0;\n\t\t\t\t\t\t\tmax =\n\t\t\t\t\t\t\t\tMath.ceil(\n\t\t\t\t\t\t\t\t\tlocalStorage.getItem(\"rangeMaxVal\") != undefined &&\n\t\t\t\t\t\t\t\t\t\tlocalStorage.getItem(\"rangeMaxVal\") != null &&\n\t\t\t\t\t\t\t\t\t\tlocalStorage.getItem(\"rangeMaxVal\") != \"\"\n\t\t\t\t\t\t\t\t\t\t? localStorage.getItem(\"rangeMaxVal\")\n\t\t\t\t\t\t\t\t\t\t: max\n\t\t\t\t\t\t\t\t) || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmin = 0;\n\t\t\t\t\t\t\tmax = Math.ceil(max) || 0;\n\t\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t\t\"prevQuery\",\n\t\t\t\t\t\t\t\twindow.unbxdSearch.getSearchQuery()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tlocalStorage.setItem(\"rangeMaxVal\", max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (selectedValues) {\n\t\t\t\t\t\tstart = Number(selectedValues.x);\n\t\t\t\t\t\tend = Number(selectedValues.y);\n\t\t\t\t\t}\n\n\t\t\t\t\t_this[rangeId] = noUiSlider.create(sliderElem, {\n\t\t\t\t\t\tstart: [start, end],\n\t\t\t\t\t\ttooltips: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tto: function (value) {\n\t\t\t\t\t\t\t\t\treturn `${prefix} ${Math.round(value)}`;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tto: function (value) {\n\t\t\t\t\t\t\t\t\treturn `${prefix} ${Math.round(value)}`;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tconnect: true,\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tmin: min,\n\t\t\t\t\t\t\tmax: max,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tformat: {\n\t\t\t\t\t\t\tto: function to(value) {\n\t\t\t\t\t\t\t\treturn Math.round(value);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfrom: function from(value) {\n\t\t\t\t\t\t\t\treturn Math.round(value);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t});\n\t\t\t\t\tfunction mergeTooltips(slider, threshold, separator) {\n\t\t\t\t\t\tvar textIsRtl = getComputedStyle(slider).direction === \"rtl\";\n\t\t\t\t\t\tvar isRtl = slider.noUiSlider.options.direction === \"rtl\";\n\t\t\t\t\t\tvar isVertical =\n\t\t\t\t\t\t\tslider.noUiSlider.options.orientation === \"vertical\";\n\t\t\t\t\t\tvar tooltips = slider.noUiSlider.getTooltips();\n\t\t\t\t\t\tvar origins = slider.noUiSlider.getOrigins();\n\t\t\t\t\t\t// Move tooltips into the origin element. The default stylesheet handles this.\n\t\t\t\t\t\ttooltips.forEach(function (tooltip, index) {\n\t\t\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\t\t\torigins[index].appendChild(tooltip);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tslider.noUiSlider.on(\n\t\t\t\t\t\t\t\"update\",\n\t\t\t\t\t\t\tfunction (values, handle, unencoded, tap, positions) {\n\t\t\t\t\t\t\t\tvar pools = [[]];\n\t\t\t\t\t\t\t\tvar poolPositions = [[]];\n\t\t\t\t\t\t\t\tvar poolValues = [[]];\n\t\t\t\t\t\t\t\tvar atPool = 0;\n\t\t\t\t\t\t\t\t// Assign the first tooltip to the first pool, if the tooltip is configured\n\t\t\t\t\t\t\t\tif (tooltips[0]) {\n\t\t\t\t\t\t\t\t\tpools[0][0] = 0;\n\t\t\t\t\t\t\t\t\tpoolPositions[0][0] = positions[0];\n\t\t\t\t\t\t\t\t\tpoolValues[0][0] = values[0];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (var i = 1; i < positions.length; i++) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t!tooltips[i] ||\n\t\t\t\t\t\t\t\t\t\tpositions[i] - positions[i - 1] > threshold\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tatPool++;\n\t\t\t\t\t\t\t\t\t\tpools[atPool] = [];\n\t\t\t\t\t\t\t\t\t\tpoolValues[atPool] = [];\n\t\t\t\t\t\t\t\t\t\tpoolPositions[atPool] = [];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (tooltips[i]) {\n\t\t\t\t\t\t\t\t\t\tpools[atPool].push(i);\n\t\t\t\t\t\t\t\t\t\tpoolValues[atPool].push(values[i]);\n\t\t\t\t\t\t\t\t\t\tpoolPositions[atPool].push(positions[i]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpools.forEach(function (pool, poolIndex) {\n\t\t\t\t\t\t\t\t\tvar handlesInPool = pool.length;\n\t\t\t\t\t\t\t\t\tfor (var j = 0; j < handlesInPool; j++) {\n\t\t\t\t\t\t\t\t\t\tvar handleNumber = pool[j];\n\t\t\t\t\t\t\t\t\t\tif (j === handlesInPool - 1) {\n\t\t\t\t\t\t\t\t\t\t\tvar offset = 0;\n\t\t\t\t\t\t\t\t\t\t\tpoolPositions[poolIndex].forEach(function (value) {\n\t\t\t\t\t\t\t\t\t\t\t\toffset += 1000 - value;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tvar direction = isVertical ? \"bottom\" : \"right\";\n\t\t\t\t\t\t\t\t\t\t\tvar last = isRtl ? 0 : handlesInPool - 1;\n\t\t\t\t\t\t\t\t\t\t\tvar lastOffset = 1000 - poolPositions[poolIndex][last];\n\t\t\t\t\t\t\t\t\t\t\toffset =\n\t\t\t\t\t\t\t\t\t\t\t\t(textIsRtl && !isVertical ? 100 : 0) +\n\t\t\t\t\t\t\t\t\t\t\t\toffset / handlesInPool -\n\t\t\t\t\t\t\t\t\t\t\t\tlastOffset;\n\t\t\t\t\t\t\t\t\t\t\t// Center this tooltip over the affected handles\n\t\t\t\t\t\t\t\t\t\t\ttooltips[handleNumber].innerHTML =\n\t\t\t\t\t\t\t\t\t\t\t\t\"$\" + poolValues[poolIndex].join(separator);\n\t\t\t\t\t\t\t\t\t\t\ttooltips[handleNumber].style.display = \"block\";\n\t\t\t\t\t\t\t\t\t\t\ttooltips[handleNumber].style[direction] = offset + \"%\";\n\t\t\t\t\t\t\t\t\t\t\ttooltips[handleNumber].style.left = \"-340% !important\";\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t// Hide this tooltip\n\t\t\t\t\t\t\t\t\t\t\ttooltips[handleNumber].style.display = \"none\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tmergeTooltips(sliderElem, 15, \" - $\");\n\t\t\t\t\t_this[rangeId].on(\"set\", function (data) {\n\t\t\t\t\t\tlet newData = {\n\t\t\t\t\t\t\tstart: data[0],\n\t\t\t\t\t\t\tend: data[1],\n\t\t\t\t\t\t\tfacetName: facetName,\n\t\t\t\t\t\t\tgap: _gap,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tself.setRangeSlider(newData);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}",
		"viewMoreText": "[\"show all\", \"show less\"]",
		"htmlAttributes": "{\n  \"class\": \"UNX-facets-results-block\"\n}"
	},
	"pagination": {
		"enabled": "true",
		"type": "FIXED_PAGINATION",
		"el": "null",
		"pageClass": "UNX_loadMore",
		"selectedPageClass": "UNX-selected-page-item",
		"pageLimit": 4,
		"infiniteScrollTriggerEl": "document.getElementById('searchResultsWrapper')",
		"heightDiffToTriggerNextPage": 98,
		"action": "Click",
		"tagName": "DIV",
		"template": "function (paginationData, pagination) {\n\t\t\tconsole.log(paginationData);\n\t\t\tconsole.log(pagination);\n\t\t\tif (!paginationData) {\n\t\t\t\treturn ``;\n\t\t\t}\n\t\t\tconst { productsLn, numberOfProducts, rows } = paginationData;\n\t\t\tconst { pageClass, selectedPageClass, pageLimit } =\n\t\t\t\tthis.options.pagination;\n\t\t\tconst { UNX_pageNumber } = this.testIds;\n\t\t\tif (numberOfProducts < productsLn) {\n\t\t\t\treturn ``;\n\t\t\t}\n\t\t\tif (numberOfProducts > productsLn) {\n\t\t\t\tconsole.log(\"if\");\n\t\t\t\tdocument.getElementById(\"paginationContainer\").style.display = \"block\";\n\t\t\t\tdocument.getElementById(\"btn-back-to-top\").style.display = \"block\";\n\t\t\t} else {\n\t\t\t\tconsole.log(\"else\");\n\t\t\t\tdocument.getElementById(\"paginationContainer\").style.display = \"none\";\n\t\t\t}\n\t\t\tif (rows <= productsLn) {\n\t\t\t\treturn `<div class=\"UNX-click-scroll\"><button data-test-id=\"${this.testIds.UNX_loadMore}\" class=\"UNX-click-n-scroll ${pageClass}\">View More</button></div>`;\n\t\t\t} else {\n\t\t\t\treturn `<div class=\"UNX-click-no-scroll\"><button data-test-id=\"${this.testIds.UNX_loadMore}\" class=\"UNX-click-n0-scroll ${pageClass}\"></button></div>`;\n\t\t\t}\n\t\t}",
		"onPaginate": "function (paginationInfo) { }",
		"htmlAttributes": "{\n  \"class\": \"UNX-pagination-size-block\"\n}"
	},
	"pagesize": {
		"enabled": "true",
		"el": "document.getElementById(\"changeNoOfProducts\")",
		"pageSize": 40,
		"pageSizeClass": "UNX-pagesize",
		"selectedPageSizeClass": "UNX-selected-pagesize",
		"action": "change",
		"tagName": "DIV",
		"options": "[8, 12, 16, 20, 24]",
		"template": "function(selected, pagesize) {\n    const {\n        UNX_pagesize\n    } = this.testIds;\n    let ui = `<label class=\"UNX-hidden\" for=\"unxPageSize\">Sort By</label><select id=\"unxPageSize\" name=\"unxPageSize\" class=\"UNX-select-pagesize ${pagesize.pageSizeClass}\">`;\n    pagesize.options.forEach((opt,i)=>{\n        const tId = `data-test-id=\"${UNX_pagesize}${i+1}\"`;\n        if(selected == opt) {\n            ui+=`<option selected ${tId} class=\"${pagesize.selectedPageSizeClass}\" id=\"${opt}\">${opt}</option>`;\n        } else{\n            ui+=`<option ${tId} id=\"${opt}\">${opt}</option>`;\n        }\n        \n    });\n    ui+= `</select>`\n    return `<div class=\"UNX-pagesize-block\">${ui}</div>`;\n}",
		"htmlAttributes": "{\n  \"class\": \"UNX-page-size-block\"\n}"
	},
	"sort": {
		"enabled": "true",
		"el": "document.getElementById(\"sortWrapper\")",
		"sortClass": "UNX-sort-item",
		"selectedSortClass": "UNX-selected-sort",
		"action": "change",
		"tagName": "DIV",
		"options": "[\n\t\t\t{\n\t\t\t\tvalue: \"price asc\",\n\t\t\t\ttext: \"Price Low to High\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: \"price desc\",\n\t\t\t\ttext: \"Price High to Low\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: \"title asc\",\n\t\t\t\ttext: \"Name : A-Z\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: \"title desc\",\n\t\t\t\ttext: \"Name : Z-A\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: \"score asc\",\n\t\t\t\ttext: \"Best Sellers\",\n\t\t\t}\n\t\t]",
		"template": "function(selectedSort, sortConfig) {\n    let optionsUI = \"\";\n    const {\n        options,\n        sortClass,\n        selectedSortClass\n    } = sortConfig;\n    const {\n        UNX_unbxdSorter\n    } = this.testIds;\n    options.forEach((item) => {\n        const {\n            value,\n            text\n        } = item;\n        if(value == selectedSort) {\n            optionsUI += `<option value=\"${value}\" class=\"${selectedSortClass}\" selected>${text}</option>`;\n        } else {\n            optionsUI += `<option value=\"${value}\">${text}</option>`;\n        }\n    })\n    return [`<div class=\"UNX-sort-block\">`,\n        `<span class=\"UNX-sort-header\">Sort By</span>`,\n        `<label class=\"UNX-hidden\" for=\"unxSortSelect\">Sort By</label>`,\n        `<select data-test-id=\"${UNX_unbxdSorter}\" name=\"unxSortSelect\" data-action=\"changeSort\" id=\"unxSortSelect\" class=\"${sortClass}\">`,\n            `<option value=\"\">Relevancy</option>`,\n            optionsUI,\n        `</select>`,\n    `</div>`].join('')\n}",
		"htmlAttributes": "{\n  \"class\": \"UNX-sort-block-lb\"\n}"
	},
	"productView": {
		"enabled": "true",
		"el": "document.getElementById(\"productViewTypeContainer\")",
		"defaultViewType": "GRID",
		"action": "click",
		"viewTypeClass": "UNX-product-view",
		"selectedViewTypeClass": "UNX-selected-product-view",
		"tagName": "DIV",
		"template": "function(selectedViewType, productViewType) {\n    const isDisabled = (this.getSearchResults())?false:true;\n    const {\n        selectedViewTypeClass,\n        viewTypeClass\n    } = productViewType;\n    const {\n        UNX_gridBtn,\n        UNX_listBtn\n    } = this.testIds;\n    let listBtnCss =`UNX-list-btn ${viewTypeClass}`;\n    let gridBtnCss = `UNX-grid-btn ${viewTypeClass}`;\n    const gTAttr = `data-test-id=${UNX_gridBtn}`;\n    const lTAttr = `data-test-id=${UNX_listBtn}`;\n    if(selectedViewType === 'LIST' ) {\n        listBtnCss += ` ${selectedViewTypeClass}`\n    }\n    if(selectedViewType === 'GRID' ) {\n        gridBtnCss += ` ${selectedViewTypeClass}`\n    }\n    let listBtn = `<button id=\"listBtn\" class=\"${listBtnCss}\" ${lTAttr} data-view-action=\"LIST\" ></button>`;\n    let gridBtn = `<button ${gTAttr} id=\"gridBtn\" class=\"${gridBtnCss}\" data-view-action=\"GRID\" ></button>`;\n    if(isDisabled) {\n        listBtn = `<button ${lTAttr} id=\"listBtn\" disabled class=\"${listBtnCss} disabled-btn\" data-view-action=\"LIST\" ></button>`;\n        gridBtn = `<button ${gTAttr} id=\"gridBtn\" disabled class=\"${gridBtnCss}  disabled-btn\"data-view-action=\"GRID\" ></button>`;\n    }\n    return `${listBtn} ${gridBtn}`\n\n}",
		"htmlAttributes": "{\n  \"class\": \"product-view-container\"\n}"
	},
	"breadcrumb": {
		"enabled": "true",
		"el": "document.getElementById(\"breadcrumpContainer\")",
		"selectorClass": "UNX-bread-crumb",
		"tagName": "DIV",
		"template": "function(breadcrumbs, breadcrumb){\n    let ui = ``;\n    const {\n        selectorClass\n    } = breadcrumb;\n    breadcrumbs.forEach((item ,id )=> {\n        const {\n            level,\n            filterField,\n            value\n        } = item;\n        const css = `${selectorClass} UNX-bread-crumb-item`;\n        if(id > 0) {\n            ui += `<span class=\"UNX-slash\"> / </span>`;\n        }\n        ui += [`<button data-parent=\"${filterField}\" data-level=\"${level}\" class=\"${css}\" data-name=\"${value}\" data-action = \"clearCategoryFilter\">`,\n        `${decodeURIComponent(value)}</button>`].join('')\n    })\n    return `<div class=\"bread-crumb-main\">${ui}</div>`\n}",
		"htmlAttributes": "{\n  \"class\": \"UNX-breadcrumbs-block\"\n}"
	},
	"spellCheck": {
		"enabled": "true",
		"el": "document.getElementById(\"didYouMeanWrapper\")",
		"selectorClass": "UNX-suggestion",
		"tagName": "DIV",
		"template": "function(query,suggestion,pages) {\n    const {\n        start,\n        productsLn,\n        numberOfProducts\n    } = pages;\n    const {\n        selectorClass,\n        enabled\n    } = this.options.spellCheck;\n    const {\n        productType\n    } = this.options;\n    let newQuery = query;\n    if(productType !==\"SEARCH\" ) {\n        const catId = this.getCategoryId() || \"\";\n        const cId = decodeURIComponent(catId).split(\">\");\n        newQuery = cId[cId.length-1] || cId[0] ;\n    }\n    const {\n        UNX_spellCheck\n    } = this.testIds\n    const noUi = (suggestion) ? `<p class=\"UNX-no-result\"> Your search \"<strong>${suggestion}</strong>\" did not match any products. Did you mean <button data-test-id=\"${UNX_spellCheck}\" data-action=\"getSuggestion\" class=\"${selectorClass}\">${query}</button>? </p>` :``;\n    let qUi = ``;\n    let countUi = ``;\n    if(numberOfProducts > 0) {\n        countUi = `<span class=\"UNX-result-info\">  -  ${start+1} to ${productsLn+start} of ${numberOfProducts} products</span>`;\n    }\n    if(pages && newQuery){\n        if(!enabled) {\n            newQuery = suggestion || query\n        }\n        qUi = `<p class=\"UNX-suggestion-p\">Showing results for <strong>${newQuery}</strong> ${countUi}</p>`;\n    }\n    return  [`<div class=\"UNX-spellcheck-block\">`,\n            noUi,\n            qUi,\n        `</div>`].join('');\n}",
		"htmlAttributes": "{\n  \"class\": \"UNX-spellcheck-wrapper\"\n}"
	},
	"banner": {
		"enabled": "true",
		"el": "document.getElementById(\"bannerContainer\")",
		"tagname": "DIV",
		"template": "function(banners, bannerOpts) {\n    const {\n        openNewTab\n    } = bannerOpts\n    const bannerUI = banners.map((item) => {\n        const {\n            imageUrl,\n            landingUrl,\n            bannerHtml\n        } = item;\n        if(bannerHtml) {\n            return bannerHtml;\n        }\n        let hrefStr = ``;\n        if(landingUrl) {\n            hrefStr +=`href=${landingUrl}`\n        }\n        if(openNewTab) {\n            hrefStr +=`  target=\"_blank\"`;\n        }\n\n        return `<a class=\"UNX-banner-wrap\" ${hrefStr} ><img style=\"max-width:100%\" src=\"${imageUrl}\"/></a>`\n    }).join('');\n    return `${bannerUI}`\n}",
		"htmlattributes": "{\n  \"class\": \"UNX-banner-block\"\n}"
	},
	"variants": {
		"enabled": "true",
		"count": 1,
		"groupBy": "price",
		"attributes": "[\"value1\", \"value2\"]",
		"mapping": "{\"value1\": \"1\",\n\"value2\": \"2\"}"
	},
	"swatches": {
		"attributesMap": "{\n  \"swatchList\": \"color\", \n  \"swatchImgs\": \"unbxd_color_mapping\", \n  \"swatchColors\": \"color\"\n}",
		"enabled": "true",
		"swatchClass": "UNX-swatch-btn",
		"template": "function(swatchData, swatches,product) {\n    const {\n        swatchImgs = []\n    } = swatchData;\n    let btnUI = ``;\n    let btnList = ``;\n    let imgsUI = ``;\n    const {\n        swatchClass\n    } = swatches;\n    const {\n        UNX_swatchClrBtn\n    } = this.testIds;\n    const {\n        unxTitle\n    } = product;\n    if(swatchImgs.length > 1) {\n        swatchImgs.forEach((item,id) => {\n            const sid = this.generateRid(\"unx_swatch_\");\n            const sCss = (id === 0) ? '':' UNX-swatch-hidden';\n            const bCss = (id === 0) ? ' UNX-selected-swatch':'';\n            const data = item.split(\"::\");\n            if(data){\n                btnUI+= [`<button value=\"swatch color ${data[0]}\" data-test-id=\"${UNX_swatchClrBtn}${id}\" data-swatch-id=\"${sid}\" data-action=\"changeSwatch\" class=\"${swatchClass} ${sid} ${bCss}\" style=\"background-color:${data[0]}\"> swatch color ${data[0]} </button>`].join('');\n                imgsUI+=`<div id=\"${sid}\" class=\"UNX-img-wrapper ${sCss}\"><img alt=\"${unxTitle} for the ${data[0]}\" class=\"UNX-img-block\" src=\"${data[1]}\"/></div>`\n            }\n        });\n        btnList = `<div class=\"UNX-swatch-color-list\">${btnUI}</div>`;\n    }\n    return {\n        btnList:btnList,\n        imgList:imgsUI,\n    };\n}"
	},
	"noResults": {
		"template": "function (query) {\n\t\t\tconsole.log(\"nore\");\n\t\t\tdocument.querySelector(\"#UNX-filter-components\").style.display = \"none\";\n\t\t\tdocument.getElementById(\"paginationContainer\").style.display = \"none\";\n\t\t\tdocument.getElementById(\"btn-back-to-top\").style.display = \"none\";\n\t\t\treturn query == \"|\"\n\t\t\t\t? '<div class=\"UNX-no-results\"> No Results found for * </div>'\n\t\t\t\t: '<div class=\"UNX-no-results\"> No Results found for ' +\n\t\t\t\t\t\tquery +\n\t\t\t\t\t\t\"</div>\";\n\t\t}",
		"el": "document.getElementById(\"noResultWrapper\")"
	}
}
